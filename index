<!DOCTYPE html>
<html>
<head>
<link type="text/css" rel="stylesheet" href="css.css"/>
<title>No Touch Red</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<style>

canvas {
    border:1px solid #d3d3d3;
    background-color: #f1f1f1;
}

</style>
</head>
<body onload="startGame()">
<script>

var myGamePiece, myObstacles;

function component(width, height, color, x, y) {
    this.gamearea = myGameArea;
    this.width = width;
    this.height = height;
    this.speedX = 0;
    this.speedY = 0;
    this.x = x;
    this.y = y;
    this.update = function() {
        ctx = myGameArea.context;
        ctx.fillStyle = color;
        ctx.fillRect(this.x, this.y, this.width, this.height);
    }
    this.newPos = function() {
        this.x += this.speedX;
        this.y += this.speedY;
    }

function startGame() {
    var myGameArea = {
    canvas : document.createElement("canvas"),
    start : function() {
        this.canvas.width = 880;
        this.canvas.height = 600;
        this.context = this.canvas.getContext("2d");
        document.body.insertBefore(this.canvas, document.body.childNodes[0]);
        this.interval = setInterval(updateGameArea, 20);

        window.addEventListener('keydown', function (e) {
            myGameArea.keys = (myGameArea.keys || []);
            myGameArea.keys[e.keyCode] = (e.type == "keydown");
        })
        window.addEventListener('keyup', function (e) {
            myGameArea.keys[e.keyCode] = (e.type == "keydown");
        })
    },
}
    myGamePieces = [];
    myGamePieces.push(new component(20, 20, "green", 220, 40)); // GamePiece top left
    myGamePieces.push(new component(20, 20, "green", 660, 40)); // GamePiece top right
    myGamePieces.push(new component(20, 20, "green", 660, 340)); // GamePiece bottom right
    myGamePieces.push(new component(20, 20, "green", 220, 340)); // GamePiece bottom left

    for(j=0;j<myGamePieces;j++) {
        myGamePiece = myGamePieces[j];
        this.speedX = 0;
        this.speedY = 0;
        if (keys[37]) { this.speedX = -2; }
        if (keys[39]) { this.speedX = 2; }
        if (keys[38]) { this.speedY = -2; }
        if (keys[40]) { this.speedY = 2; }
      
        if (crashWith(this)) {
        this.x = this.startX;
        this.y = this.startY;
      }
    }

    myObstacles = []; 
    myObstacles.push(new component(10, 130, "red", 420, 80)); // Area top left
    myObstacles.push(new component(70, 10, "red", 360, 70));
    myObstacles.push(new component(10, 70, "red", 350, 10));
    myObstacles.push(new component(250, 10, "red", 100, 10));
    myObstacles.push(new component(10, 130, "red", 100, 20));
    myObstacles.push(new component(210, 10, "red", 10, 150));
    myObstacles.push(new component(120, 10, "red", 170, 80));
    myObstacles.push(new component(10, 130, "red", 280, 90));
    myObstacles.push(new component(10, 130, "red", 10, 160));
    myObstacles.push(new component(210, 10, "red", 80, 220));
    myObstacles.push(new component(340, 10, "red", 20, 280));
    myObstacles.push(new component(10, 90, "red", 350, 200));
    myObstacles.push(new component(60, 10, "red", 360, 200));
    myObstacles.push(new component(70, 10, "red", 290, 140));

    myObstacles.push(new component(10, 130, "red", 860, 80)); // Area top right
    myObstacles.push(new component(70, 10, "red", 800, 70));
    myObstacles.push(new component(10, 70, "red", 790, 10));
    myObstacles.push(new component(250, 10, "red", 540, 10));
    myObstacles.push(new component(10, 130, "red", 540, 20));
    myObstacles.push(new component(210, 10, "red", 450, 150));
    myObstacles.push(new component(120, 10, "red", 610, 80));
    myObstacles.push(new component(10, 130, "red", 720, 90));
    myObstacles.push(new component(10, 130, "red", 450, 160));
    myObstacles.push(new component(210, 10, "red", 520, 220));
    myObstacles.push(new component(340, 10, "red", 460, 280));
    myObstacles.push(new component(10, 90, "red", 790, 200));
    myObstacles.push(new component(60, 10, "red", 800, 200));
    myObstacles.push(new component(70, 10, "red", 730, 140));

    myObstacles.push(new component(10, 130, "red", 860, 380)); // Area bottom right
    myObstacles.push(new component(70, 10, "red", 800, 370));
    myObstacles.push(new component(10, 70, "red", 790, 310));
    myObstacles.push(new component(250, 10, "red", 540, 310));
    myObstacles.push(new component(10, 130, "red", 540, 320));
    myObstacles.push(new component(210, 10, "red", 450, 450));
    myObstacles.push(new component(120, 10, "red", 610, 380));
    myObstacles.push(new component(10, 130, "red", 720, 390));
    myObstacles.push(new component(10, 130, "red", 450, 460));
    myObstacles.push(new component(210, 10, "red", 520, 520));
    myObstacles.push(new component(340, 10, "red", 460, 580));
    myObstacles.push(new component(10, 90, "red", 790, 500));
    myObstacles.push(new component(60, 10, "red", 800, 500));
    myObstacles.push(new component(70, 10, "red", 730, 440));

    myObstacles.push(new component(10, 130, "red", 420, 380)); // Area bottom left
    myObstacles.push(new component(70, 10, "red", 360, 370));
    myObstacles.push(new component(10, 70, "red", 350, 310));
    myObstacles.push(new component(250, 10, "red", 100, 310));
    myObstacles.push(new component(10, 130, "red", 100, 320));
    myObstacles.push(new component(210, 10, "red", 10, 450));
    myObstacles.push(new component(120, 10, "red", 170, 380));
    myObstacles.push(new component(10, 130, "red", 280, 390));
    myObstacles.push(new component(10, 130, "red", 10, 460));
    myObstacles.push(new component(210, 10, "red", 80, 520));
    myObstacles.push(new component(340, 10, "red", 20, 580));
    myObstacles.push(new component(10, 90, "red", 350, 500));
    myObstacles.push(new component(60, 10, "red", 360, 500));
    myObstacles.push(new component(70, 10, "red", 290, 440));

    function updateGameArea() {
        myGameArea.clear();
        myObstacles[].update();
        myGamePiece[].newPos();
        myGamePiece[].update();
    }

    this.crashWith = function(otherobj) {
        var myleft = this.x;
        var myright = this.x + (this.width);
        var mytop = this.y;
        var mybottom = this.y + (this.height);
        var otherleft = otherobj.x;
        var otherright = otherobj.x + (otherobj.width);
        var othertop = otherobj.y;
        var otherbottom = otherobj.y + (otherobj.height);
        var crash = true;
        if ((mybottom < othertop) ||
               (mytop > otherbottom) ||
               (myright < otherleft) ||
               (myleft > otherright)) {
           crash = false;
        }
        return crash;
    }  

startGame(); 
</script>
<div class="text">
<pre>   "Back in my day we gave toddlers toys, not computers..."

            Disgruntled, Old Man



        "Digital vomit"
                                            
            Random Stranger



        "10/10"
                                                
            IGN     
                                                 </pre>
</div>
</body>
</html>
